---
title: "Tutorial 6"
author: "Peter Muršič"
date: "`r format(Sys.time(), '%e %B %Y')`"
format:
  html:
    toc: true
    toc_float: yes
    embed-resources: true
execute: 
  warning: false
  messages: false
  echo: true
  error: true
editor: 
  markdown: 
    wrap: 72
bibliography: bibliography.bib
---

## Basics


Careful about spacing! After \# in the headings and after headings. To
create a new paragraph leave an empty line in between.

It is recommended to install the package **quarto**.

## Chunks

Chunks run from top to bottom.

"Library" the packages you are using.

If knitting takes forever it probably because you are trying to output a
huge dataframe.

These are global options for code chunks:

```{r setup, echo=T}
knitr::opts_chunk$set(echo = T,message=F,warning=F,error=T)
```

Or set them in YAML under execute.

Set the local options with {r, ...}

```{r}
message("Foo")
warning("Foo")
```

```{r, message=T, warning=T}
message("Foo")
warning("Foo")
```

or

```{r}
#| warning: true
#| messages: true
message("Foo")
warning("Foo")
```

### Chunks options

Some of the important options are:

-   include = FALSE prevents code and results from appearing in the
    finished file. R Markdown still runs the code in the chunk, and the
    results can be used by other chunks.
-   echo = FALSE prevents code, but not the results from appearing in
    the finished file. This is a useful way to embed figures.
-   message = FALSE prevents messages that are generated by code from
    appearing in the finished file.
-   warning = FALSE prevents warnings that are generated by code from
    appearing in the finished.
-   error=TRUE will knit even with errors in your code
-   results='hide' to not show the code
-   eval=FALSE will not evaluate the chunk of code

1.  

```{r}
1+2
```

2.  

```{r, echo=F}
1+2
```

3.  

```{r, results='hide'}
1+2
```

4.  

```{r, eval=F}
1+"2"
```

5.  

```{r, error=T}
1+"2"
```

6.  

```{r, include=F}
b<-5 
```

7.  

```{r}
b 
```

### Inline R chunk

```{r}
a<-4+5
```

The value of a is `r a`.

## Markdown

Here is a very usefull clickable hyperlink which is compact guide for R
Markdown: [click
me](https://rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf)

*italic* **bold** ***bolditalic*** superscript^2^ ~~strikethrough~~

## Listing

* 1st bullet
* 2nd bullet
  + subbullet
  
    Still part of the subbullet. Pay attention to spacing!  
  1. 1st subnumbering 
  2. 2nd subnnumbering
  
1. back to normal numbering
3. can we skip number 2? No, its automatic.


## 2D objects and cross references

The labels prefix must be either fig- or tab- in order to work.
For more info see <https://quarto.org/docs/authoring/cross-references.html>

### Figures

```{r}
#| label: fig-ggplot
#| fig-cap: ggplot
library(tidyverse)
ggplot(iris)+
  geom_point(aes(x=Petal.Length,y=Petal.Width))
```

See @fig-ggplot

```{r}
#| label: fig-plot
#| fig-cap: Famnit logo
knitr::include_graphics("https://www.famnit.upr.si/img/famnit_logo_big.png")
```

See @fig-plot

### Tables


| Col1 | Col2 | Col3 |
|------|------|------|
| A    | B    | C    |
| E    | F    | G    |
| A    | G    | G    |

: My Caption {#tbl-letters}


See @tbl-letters.

Never show the whole data frame, trim it down appropriately.

```{r}
head(mtcars,5)
```



```{r}
#| label: tbl-iris
#| tbl-cap: "Iris Data"
knitr::kable(head(iris))
```

The cross reference from @tbl-iris seems to only work with the knitr package.


```{r}
mtcars %>% DT::datatable(options = list(scrollX = T))
```


### Columns

::: {.columns style="display: flex;"}
::: {.column width="50%"}
left
:::

::: {.column width="50%"}
right
:::
:::

## HTML

### Font size with html

<font size="1"> This is font size 1</font> <font size="4"> This is my
font size 4</font>

### Font color with html

<p style="color:red">
This is a red paragraph,
</p>

but it wont let you change color of a single word within.

this text is <font color="blue">blue</font>, but html5 does not support
it</font>

### tabsets

::: panel-tabset
#### EN

english

#### SLO

slovensko
:::

### Spoiler

<details>

<summary>Spoiler alert!</summary>

A bear walks into a bar and says, "Give me a whiskey and ... cola." "Why
the big pause?" asks the bartender. The bear shrugged. "I'm not sure; I
was born with them."

</details>



## Math formulas with LaTeX:

This is a math equation $a^2+b^2=c^2$, and here is another one $$\sum_{i=1}^ni=\frac{n\cdot(n+1)}{2}.$$ It uses LaTeX  notation, in which various commands that starts with \\, arguemnts are enclosed in \{\} and math mode both starts and ends with with \$ (or \$\$). Carefull, dont leave space after the first $ and before the second $.

Symbols that should work: <https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols>

## Inline verbatim with LaTeX

"Quotation marks are translated as such",
if we want to make a copypastable code inside a sentence $\verb+v<-"copypastable"+$ we may do the above

Set the start/end symbol to be one that you do not use in the rest of the kode $\verb*1+2+3*$.

You may also use a chunk but it will not be inline.
```{r, eval=F}
v<-"copypastable"
```








## How to reference/cite other people's work.

1.  Create a file in the same directory named **bibliography.bib**

    then add to YAML with no spaces at the start of the line:

    bibliography: bibliography.bib

2.  Install the package **citation**. Restart Rstudio.

3.  Insert your cursor where you wish to put insert a citation. In the
    visual editor go to insert/citation, select a database then find a
    book/article select it then click insert.

    For more on combinatorial game theory see [@siegel2013] and
    [@berlekamp2018].

4.  Note that the citations must be inserted at a relevant place within
    a sentence and not just hang somewhere.

5.  Alernatively instead of Item 3 you may use sources like
    <https://books.google.com/> and <https://scholar.google.com/> among
    others and append the bibtex info into the previously created file.
    Note that if not cited, the article/book will not appear. Cite it
    with @ followed by the name of its unique id (or just use
    autocomplete).

6.  Add a heading named References at the end of the document.

## References
